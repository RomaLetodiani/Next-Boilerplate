GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'
BOLD='\033[1m'

# Check for bun or fallback to npm
if command -v bun >/dev/null 2>&1; then
    RUNNER="bun"
else
    echo -e "${RED}Bun is not installed. Falling back to npm.${NC}"
    RUNNER="npm"
fi

echo "${BOLD}Running pre-commit checks...${NC}\n"

# First format files
echo "üé® Running formatter..."
$RUNNER run format:write || {
    echo -e "${RED}Formatting failed${NC}"
    exit 1
}

# Re-stage formatted files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g')
if [ -n "$STAGED_FILES" ]; then
    git add $STAGED_FILES
fi

# Run format check to ensure everything is formatted
echo "‚ú® Checking format..."
$RUNNER run format:check || {
    echo -e "${RED}Format check failed${NC}"
    exit 1
}

# Run lint with auto-fix
echo "üîç Running lint with auto-fix..."
$RUNNER run lint:fix || {
    echo -e "${RED}Lint failed${NC}"
    exit 1
}

# Run type check
echo "üìù Running type check..."
$RUNNER run typecheck || {
    echo -e "${RED}Type check failed${NC}"
    exit 1
}

# Run complete check (lint + type check)
echo "üîé Running final checks..."
$RUNNER run check || {
    echo -e "${RED}Final checks failed${NC}"
    exit 1
}

# Run build to ensure everything compiles
echo "üèóÔ∏è Building project..."
$RUNNER run build || {
    echo -e "${RED}Build failed${NC}"
    exit 1
}

echo -e "\n${GREEN}‚úÖ All pre-commit checks passed!${NC}"
